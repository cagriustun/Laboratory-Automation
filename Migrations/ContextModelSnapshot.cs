// <auto-generated />
using CoreLaboratory2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreLaboratory2.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreLaboratory2.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeWorkingArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LaboratoryID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("LaboratoryID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CoreLaboratory2.Models.Laboratory", b =>
                {
                    b.Property<int>("LaboratoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LaboratoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LaboratoryType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LaboratoryID");

                    b.ToTable("Laboratorys");
                });

            modelBuilder.Entity("CoreLaboratory2.Models.Test", b =>
                {
                    b.Property<int>("TestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("TestDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestTypes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TestID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("CoreLaboratory2.Models.Employee", b =>
                {
                    b.HasOne("CoreLaboratory2.Models.Laboratory", "Laboratory")
                        .WithMany("Employees")
                        .HasForeignKey("LaboratoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoreLaboratory2.Models.Test", b =>
                {
                    b.HasOne("CoreLaboratory2.Models.Employee", "Employee")
                        .WithMany("Tests")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
